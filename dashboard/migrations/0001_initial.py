# Generated by Django 2.1.7 on 2019-04-10 10:15

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutCountries',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=50)),
                ('country_code', models.CharField(max_length=2)),
                ('currency', models.CharField(max_length=10)),
                ('pincode_size', models.IntegerField()),
                ('event_listing', models.CharField(max_length=11)),
                ('event_ticketing', models.CharField(max_length=11)),
                ('event_mcp', models.CharField(max_length=11)),
                ('bank_regex1', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_regex2', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'about_countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Articles2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=45)),
                ('event_name', models.CharField(default='nothing yet', max_length=200, unique=True)),
                ('md5', models.CharField(max_length=35)),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True)),
                ('profile_image', models.CharField(max_length=350)),
                ('sdate', models.DateTimeField(blank=True, db_column='sDate', null=True, unique=True)),
                ('edate', models.DateTimeField(blank=True, db_column='eDate', null=True, unique=True)),
                ('address_line1', models.TextField(blank=True, null=True)),
                ('address_line2', models.TextField(blank=True, null=True)),
                ('pincode', models.IntegerField(default=0)),
                ('state', models.CharField(max_length=30)),
                ('city', models.TextField()),
                ('locality', models.CharField(max_length=50)),
                ('full_address', models.CharField(default='nothing yet', max_length=255, unique=True)),
                ('latitude', models.CharField(max_length=15)),
                ('longitude', models.CharField(max_length=25)),
                ('start_time', models.TimeField(default=django.utils.timezone.now)),
                ('end_time', models.TimeField(default=django.utils.timezone.now)),
                ('description', models.TextField(default='nothing yet')),
                ('website', models.CharField(blank=True, max_length=50, null=True)),
                ('fb_page', models.CharField(blank=True, max_length=200, null=True)),
                ('fb_event_page', models.CharField(blank=True, max_length=200, null=True)),
                ('event_hashtag', models.CharField(blank=True, max_length=30, null=True)),
                ('source_name', models.CharField(max_length=30)),
                ('source_url', models.CharField(max_length=350)),
                ('email_id_organizer', models.CharField(max_length=100)),
                ('ticket_url', models.TextField(default='nothing yet')),
                ('banner', models.ImageField(default='', upload_to='third_step_images')),
                ('editable_image', models.ImageField(default='', upload_to='third_step_images')),
            ],
            options={
                'db_table': 'articles2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttendeeFormBuilder',
            fields=[
                ('ques_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ques_title', models.TextField()),
                ('ques_type', models.IntegerField()),
                ('ques_accessibility', models.IntegerField()),
            ],
            options={
                'db_table': 'attendee_form_builder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttendeeFormOptions',
            fields=[
                ('option_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ques_id', models.IntegerField()),
                ('option_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'attendee_form_options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttendeeFormTypes',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'attendee_form_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=38)),
                ('page_name', models.CharField(max_length=30)),
                ('short_lived', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategorizedEvents',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('category_id', models.IntegerField()),
                ('topic_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'categorized_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='rsvp',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField()),
                ('event_id', models.IntegerField()),
                ('uniq_id', models.CharField(max_length=10)),
                ('supplied_by', models.CharField(max_length=30)),
                ('attendee_name', models.CharField(max_length=30)),
                ('attendee_email', models.CharField(max_length=80)),
                ('attendee_contact', models.CharField(max_length=12)),
            ],
            options={
                'db_table': 'rsvp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatusPromotionTicketing',
            fields=[
                ('status_promotion_ticketing_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('unique_id', models.CharField(max_length=10)),
                ('mode', models.CharField(max_length=20)),
                ('private', models.IntegerField()),
                ('event_active', models.IntegerField()),
                ('approval', models.IntegerField()),
                ('network_share', models.IntegerField()),
                ('ticketing', models.IntegerField()),
                ('promotion', models.IntegerField()),
                ('connected_user', models.IntegerField()),
                ('complete_details', models.IntegerField()),
            ],
            options={
                'db_table': 'status_promotion_ticketing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('tickets_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ticket_name', models.CharField(max_length=100)),
                ('ticket_price', models.CharField(max_length=8)),
                ('other_charges', models.CharField(blank=True, max_length=6, null=True)),
                ('other_charges_type', models.IntegerField(blank=True, null=True)),
                ('ticket_qty', models.IntegerField()),
                ('min_qty', models.IntegerField()),
                ('max_qty', models.IntegerField()),
                ('qty_left', models.IntegerField()),
                ('ticket_msg', models.CharField(max_length=200)),
                ('ticket_start_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField()),
                ('ercess_fee', models.IntegerField()),
                ('transaction_fee', models.IntegerField()),
                ('ticket_label', models.CharField(max_length=20)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('topics_id', models.AutoField(primary_key=True, serialize=False)),
                ('topic', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=37)),
            ],
            options={
                'db_table': 'topics',
                'managed': False,
            },
        ),
    ]
