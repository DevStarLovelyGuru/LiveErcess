# Generated by Django 2.2.4 on 2019-08-16 13:25

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0011_auto_20190727_1019'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminAccesses',
            fields=[
                ('access_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('updated_on', models.DateTimeField()),
                ('access_type', models.IntegerField()),
                ('read_access', models.IntegerField()),
                ('write_access', models.IntegerField()),
                ('delete_access', models.IntegerField()),
            ],
            options={
                'db_table': 'admin_accesses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminEditorialLogs',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('data_type', models.TextField()),
                ('old_data', models.TextField()),
                ('new_data', models.TextField()),
            ],
            options={
                'db_table': 'admin_editorial_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminEventAssignment',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('super_admin_id', models.IntegerField(blank=True, null=True)),
                ('event_id', models.IntegerField()),
                ('assignment_timestamp', models.DateTimeField()),
                ('deadline', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admin_event_assignment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminEventConcerns',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('message', models.TextField()),
                ('date_added', models.DateTimeField()),
                ('resolve', models.IntegerField()),
                ('admin_id', models.IntegerField()),
            ],
            options={
                'db_table': 'admin_event_concerns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminPromotionalContents',
            fields=[
                ('content_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('date_added', models.DateTimeField()),
                ('event_id', models.IntegerField()),
                ('contents', models.TextField()),
            ],
            options={
                'db_table': 'admin_promotional_contents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminPromotionPostings',
            fields=[
                ('posting_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('admin_id', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('group_name', models.CharField(max_length=600)),
                ('group_link', models.CharField(max_length=600)),
                ('status', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'admin_promotion_postings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminsWrongSubmissions',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('link_id', models.CharField(max_length=11)),
                ('submitted_by', models.IntegerField()),
                ('verified_by', models.IntegerField()),
                ('date_added', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admins_wrong_submissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminTaskManagement',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('raised_by', models.IntegerField()),
                ('raised_to', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('priority', models.CharField(max_length=25)),
                ('message', models.TextField()),
                ('status', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'admin_task_management',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttendeeAnnouncements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.IntegerField()),
                ('org_id', models.IntegerField()),
                ('msg', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'attendee_announcements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttendeeFormResponse',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ticket_id', models.IntegerField()),
                ('attendee_id', models.IntegerField()),
                ('ques_id', models.IntegerField()),
                ('booking_id', models.CharField(max_length=20)),
                ('response', models.CharField(max_length=400)),
            ],
            options={
                'db_table': 'attendee_form_response',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthtokenToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'authtoken_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Blogs',
            fields=[
                ('blog_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField()),
                ('added_by', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=120)),
                ('blog_img', models.CharField(max_length=300)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'blogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CitiesList',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('city', models.TextField()),
                ('state', models.TextField()),
                ('country', models.TextField()),
                ('major', models.IntegerField()),
            ],
            options={
                'db_table': 'cities_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerSupport',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('complaint_id', models.CharField(max_length=14)),
                ('subject', models.TextField()),
                ('thread_status', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'customer_support',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerSupportThreads',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('complaint_id', models.CharField(max_length=12)),
                ('complaint_body', models.TextField()),
                ('complaint_date', models.DateTimeField()),
                ('admin_response', models.TextField()),
                ('admin_response_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customer_support_threads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiscountErcess',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('coupon', models.CharField(max_length=20)),
                ('amount', models.CharField(max_length=10)),
                ('amount_type', models.IntegerField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('explanation', models.TextField()),
            ],
            options={
                'db_table': 'discount_ercess',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcesscorpBlogdata',
            fields=[
                ('blog_id', models.AutoField(primary_key=True, serialize=False)),
                ('author', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.CharField(max_length=100)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Ercesscorp_blogdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcesscorpContactdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=70)),
                ('mobile', models.BigIntegerField()),
                ('purpose', models.CharField(max_length=20)),
                ('comment', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'Ercesscorp_contactdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcesscorpRegistrationdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=10)),
                ('location', models.CharField(max_length=30)),
                ('submitted', models.IntegerField()),
                ('how_u_know', models.CharField(max_length=100)),
                ('verify', models.IntegerField()),
            ],
            options={
                'db_table': 'Ercesscorp_registrationdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcesscorpUserregistrationtoken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email_token', models.CharField(max_length=250)),
                ('user_email_token_created_on', models.DateTimeField(blank=True, null=True)),
                ('user_password_token', models.CharField(max_length=250)),
                ('user_email', models.CharField(max_length=250)),
                ('user_password_token_created_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Ercesscorp_userregistrationtoken',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcessIndiaeveStates',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('state_name', models.CharField(max_length=50)),
                ('state_id', models.IntegerField()),
                ('site_id', models.IntegerField()),
            ],
            options={
                'db_table': 'ercess_indiaeve_states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcessOtherMappings',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(max_length=30)),
                ('partner_id', models.IntegerField(blank=True, null=True)),
                ('date_added', models.DateTimeField()),
            ],
            options={
                'db_table': 'ercess_other_mappings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcessPartnersCategories',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('ercess_category', models.IntegerField()),
                ('partner_category', models.CharField(blank=True, max_length=50, null=True)),
                ('partner_category_id', models.IntegerField(blank=True, null=True)),
                ('partner_id', models.CharField(db_column='partner_Id', max_length=50)),
                ('date_modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'ercess_partners_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErcessPartnersSubcategories',
            fields=[
                ('subcat_id', models.AutoField(primary_key=True, serialize=False)),
                ('ercess_topic_id', models.IntegerField()),
                ('partner_subcate_name', models.CharField(max_length=40)),
                ('partner_subcate_id', models.IntegerField(blank=True, null=True)),
                ('partner_id', models.IntegerField()),
                ('date_added', models.DateTimeField()),
            ],
            options={
                'db_table': 'ercess_partners_subcategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventStatusOnChannel',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('site_id', models.IntegerField()),
                ('admin_id', models.IntegerField()),
                ('link', models.CharField(max_length=300)),
                ('promotion_status', models.CharField(max_length=50)),
                ('partner_status', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'event_status_on_channel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FbEvents',
            fields=[
                ('event_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('country_name', models.TextField(blank=True, null=True)),
                ('event_link', models.TextField(blank=True, null=True)),
                ('heading', models.TextField(blank=True, null=True)),
                ('date', models.TextField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fb_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FbOrganizers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evid', models.CharField(blank=True, max_length=100, null=True)),
                ('organizer', models.TextField(blank=True, db_column='Organizer', null=True)),
                ('host_link', models.TextField(blank=True, null=True)),
                ('email_id', models.TextField(blank=True, null=True)),
                ('promotion_mail_status', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fb_organizers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinanceSettlement',
            fields=[
                ('finance_table_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_id', models.CharField(max_length=100)),
                ('sale_id', models.IntegerField()),
                ('sold_on', models.CharField(blank=True, max_length=100, null=True)),
                ('event_id', models.IntegerField()),
                ('receive_date', models.DateTimeField(blank=True, null=True)),
                ('receive_ref_num', models.CharField(blank=True, max_length=100, null=True)),
                ('partner_conv_fee', models.CharField(max_length=100)),
                ('partner_tax', models.CharField(max_length=100)),
                ('amount_received', models.CharField(max_length=100)),
                ('ercess_convenience', models.CharField(max_length=100)),
                ('ercess_gst', models.CharField(max_length=100)),
                ('payable_to_organizer', models.CharField(max_length=100)),
                ('process_date', models.DateTimeField(blank=True, null=True)),
                ('accountant_id', models.IntegerField()),
                ('partner_invoice_id', models.CharField(max_length=100)),
                ('ercess_invoice_id', models.IntegerField()),
                ('partner_notes', models.TextField()),
                ('organizer_notes', models.TextField()),
                ('final_settlement', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'finance_settlement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinanceStandardCharges',
            fields=[
                ('charges_id', models.AutoField(primary_key=True, serialize=False)),
                ('country_id', models.IntegerField()),
                ('fee', models.CharField(max_length=11)),
                ('fee_type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'finance_standard_charges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageTemplates',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('used_for', models.CharField(max_length=30)),
                ('explanation', models.TextField()),
                ('subject', models.TextField()),
                ('body', models.TextField()),
            ],
            options={
                'db_table': 'message_templates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizerAssets',
            fields=[
                ('asset_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.IntegerField()),
                ('organizer_id', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('date_added', models.DateTimeField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('file', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'organizer_assets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartnerCurrencies',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=30)),
                ('date_added', models.DateTimeField()),
                ('partner_id', models.IntegerField()),
                ('currency_name', models.CharField(max_length=30)),
                ('currency_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'partner_currencies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartnerTimezones',
            fields=[
                ('timezone_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=40)),
                ('last_updated', models.DateTimeField()),
                ('partner_id', models.IntegerField()),
                ('timezone', models.CharField(max_length=50)),
                ('partner_zone_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'partner_timezones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResetLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'password_reset_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentSettlement',
            fields=[
                ('settlement_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField()),
                ('date_modified', models.DateTimeField()),
                ('booking_id', models.CharField(max_length=50)),
                ('ticket_sale_id', models.CharField(max_length=50)),
                ('added_by', models.CharField(max_length=11)),
                ('modified_by', models.CharField(max_length=11)),
                ('receival_status', models.CharField(max_length=50)),
                ('expected_amnt_partner', models.CharField(max_length=11)),
                ('rcvd_amnt_partner', models.CharField(max_length=11)),
                ('receival_date', models.DateTimeField(blank=True, null=True)),
                ('receival_invoice', models.CharField(max_length=300)),
                ('partner_dispute', models.TextField()),
                ('process_status', models.CharField(max_length=50)),
                ('amount_processed', models.CharField(max_length=11)),
                ('amount_process_date', models.DateTimeField(blank=True, null=True)),
                ('process_invoice', models.CharField(max_length=300)),
                ('organizer_dispute', models.TextField()),
            ],
            options={
                'db_table': 'payment_settlement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketAttendees',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ticket_id', models.IntegerField()),
                ('order_id', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=40)),
                ('contact', models.CharField(max_length=10)),
                ('email', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'ticket_attendees',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketDiscounts',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ticket_id', models.IntegerField()),
                ('coupon', models.CharField(max_length=20)),
                ('discount_amt', models.CharField(max_length=6)),
                ('discount_type', models.IntegerField()),
                ('discount_start', models.DateTimeField()),
                ('discount_end', models.DateTimeField(blank=True, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'ticket_discounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketOrdersErcess',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_id', models.CharField(max_length=40)),
                ('txn_id', models.CharField(max_length=40)),
                ('paid', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('total_amount', models.CharField(max_length=10)),
                ('user_id', models.IntegerField()),
                ('billing_name', models.CharField(max_length=50)),
                ('billing_email', models.CharField(max_length=50)),
                ('billing_phone', models.CharField(max_length=11)),
                ('purchase_timestamp', models.DateTimeField()),
                ('affiliate', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'ticket_orders_ercess',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketsSale',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('ticket_id', models.IntegerField()),
                ('booking_id', models.CharField(max_length=30)),
                ('oragnizer', models.IntegerField()),
                ('ticket_type', models.CharField(max_length=100)),
                ('purchase_date', models.DateTimeField(blank=True, null=True)),
                ('ampunt_paid', models.FloatField()),
                ('qty', models.IntegerField()),
                ('attendee_name', models.CharField(max_length=30)),
                ('attendee_contact', models.CharField(blank=True, max_length=12, null=True)),
                ('attendee_email', models.CharField(blank=True, max_length=45, null=True)),
                ('seller_site', models.CharField(max_length=25)),
                ('ticket_handover', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'tickets_sale',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketsSaleErcess',
            fields=[
                ('cart_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_id', models.CharField(max_length=40)),
                ('event_id', models.IntegerField()),
                ('ticket_id', models.IntegerField()),
                ('cart_timestamp', models.DateTimeField(blank=True, null=True)),
                ('qty', models.IntegerField()),
                ('applied_coupon', models.CharField(max_length=10)),
                ('coupon', models.CharField(max_length=10)),
                ('tickets_amount', models.FloatField()),
                ('discounted_amount', models.CharField(max_length=10)),
                ('extra_charges', models.FloatField()),
                ('ercess_fees', models.CharField(max_length=10)),
                ('processing_fee', models.CharField(max_length=10)),
                ('cart_status', models.IntegerField()),
            ],
            options={
                'db_table': 'tickets_sale_ercess',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_userid', models.TextField(blank=True, null=True)),
                ('md5', models.CharField(max_length=36)),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('user', models.CharField(max_length=40)),
                ('profile_pic', models.TextField()),
                ('gender', models.CharField(max_length=8)),
                ('location', models.CharField(max_length=25)),
                ('mobile', models.CharField(max_length=11)),
                ('password', models.CharField(blank=True, max_length=300, null=True)),
                ('mobile_verified', models.IntegerField()),
                ('status', models.CharField(max_length=8)),
                ('first_time', models.CharField(max_length=20)),
                ('organization_name', models.CharField(max_length=200)),
                ('organization_location', models.TextField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_userid', models.TextField(blank=True, null=True)),
                ('md5', models.CharField(max_length=36)),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('user', models.CharField(max_length=40)),
                ('profile_pic', models.TextField()),
                ('gender', models.CharField(max_length=8)),
                ('location', models.CharField(max_length=25)),
                ('mobile', models.CharField(max_length=11)),
                ('password', models.CharField(blank=True, max_length=300, null=True)),
                ('mobile_verified', models.IntegerField()),
                ('status', models.CharField(max_length=8)),
                ('first_time', models.CharField(max_length=20)),
                ('organization_name', models.CharField(max_length=200)),
                ('organization_location', models.TextField()),
            ],
            options={
                'db_table': 'users2',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Admin_Event_Assignment',
        ),
        migrations.DeleteModel(
            name='AdminAccess',
        ),
        migrations.DeleteModel(
            name='Payment_settlement',
        ),
        migrations.DeleteModel(
            name='Tickets_Sale',
        ),
        migrations.AlterModelOptions(
            name='boostevent',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='statusonchannel',
            options={},
        ),
    ]
